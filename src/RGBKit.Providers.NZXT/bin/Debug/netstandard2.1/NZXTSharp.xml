<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NZXTSharp</name>
    </assembly>
    <members>
        <member name="T:NZXTSharp.COM.ICOMController">
            <summary>
            Represents an HID or serial communication controller.
            </summary>
        </member>
        <member name="T:NZXTSharp.COM.SerialCOMData">
            <summary>
            Contains information needed to open a COM port.
            </summary>
        </member>
        <member name="P:NZXTSharp.COM.SerialCOMData.Parity">
            <summary>
            The <see cref="T:System.IO.Ports.Parity"/> setting of the <see cref="T:NZXTSharp.COM.SerialCOMData"/> instance.
            </summary>
        </member>
        <member name="P:NZXTSharp.COM.SerialCOMData.StopBits">
            <summary>
            The <see cref="T:System.IO.Ports.StopBits"/> setting of the <see cref="T:NZXTSharp.COM.SerialCOMData"/> instance.
            </summary>
        </member>
        <member name="P:NZXTSharp.COM.SerialCOMData.WriteTimeout">
            <summary>
            The write timeout setting of the <see cref="T:NZXTSharp.COM.SerialCOMData"/> instance (ms).
            </summary>
        </member>
        <member name="P:NZXTSharp.COM.SerialCOMData.ReadTimeout">
            <summary>
            The read timeout setting of the <see cref="T:NZXTSharp.COM.SerialCOMData"/> instance (ms).
            </summary>
        </member>
        <member name="P:NZXTSharp.COM.SerialCOMData.Baud">
            <summary>
            The baud setting of the <see cref="T:NZXTSharp.COM.SerialCOMData"/> instance.
            </summary>
        </member>
        <member name="P:NZXTSharp.COM.SerialCOMData.DataBits">
            <summary>
            The databits setting of the <see cref="T:NZXTSharp.COM.SerialCOMData"/> instance.
            </summary>
        </member>
        <member name="P:NZXTSharp.COM.SerialCOMData.Name">
            <summary>
            The custom name of the <see cref="T:NZXTSharp.COM.SerialCOMData"/> instance.
            </summary>
        </member>
        <member name="M:NZXTSharp.COM.SerialCOMData.#ctor(System.IO.Ports.Parity,System.IO.Ports.StopBits,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.COM.SerialCOMData"/> object.
            </summary>
            <param name="Parity"> The <see cref="P:NZXTSharp.COM.SerialCOMData.Parity"/> type to use.</param>
            <param name="StopBits"> The number of <see cref="P:NZXTSharp.COM.SerialCOMData.StopBits"/> to use. </param>
            <param name="WriteTimeout"> The WriteTimeout in ms.</param>
            <param name="ReadTimeout"> The ReadTimeout in ms.</param>
            <param name="Baud"> The baud to use.</param>
            <param name="DataBits"> The number of DataBits to use.</param>
            <param name="Name">A custom name for the <see cref="T:NZXTSharp.COM.SerialCOMData"/>.</param>
        </member>
        <member name="M:NZXTSharp.COM.SerialCOMData.ToString">
            <summary>
            Generates a string with information about the <see cref="T:NZXTSharp.COM.SerialCOMData"/> instance.
            </summary>
            <returns>A string with information about the <see cref="T:NZXTSharp.COM.SerialCOMData"/> instance.</returns>
        </member>
        <member name="T:NZXTSharp.COM.SerialController">
            <summary>
            Represents a <see cref="T:System.IO.Ports.SerialPort"/> with some useful methods.
            </summary>
        </member>
        <member name="P:NZXTSharp.COM.SerialController.Port">
            <summary>
            The SerialPort instance owned by the Controller.
            </summary>
        </member>
        <member name="P:NZXTSharp.COM.SerialController.StartData">
            <summary>
            The <see cref="T:NZXTSharp.COM.SerialCOMData"/> the <see cref="T:NZXTSharp.COM.SerialController"/> used to start.
            </summary>
        </member>
        <member name="P:NZXTSharp.COM.SerialController.IsOpen">
            <summary>
            Returns a bool telling whether or not the <see cref="T:NZXTSharp.COM.SerialController"/>'s <see cref="P:NZXTSharp.COM.SerialController.Port"/> is open.
            </summary>
        </member>
        <member name="M:NZXTSharp.COM.SerialController.#ctor(System.String)">
            <summary>
            Opens the SerialController on a specific COM port.
            </summary>
            <param name="COMPort">The COM port to open in "COMx" format.</param>
        </member>
        <member name="M:NZXTSharp.COM.SerialController.#ctor(System.String[],NZXTSharp.COM.SerialCOMData)">
            <summary>
            Attempts to open each of the COM ports in <paramref name="PossiblePorts"/> with the provided <paramref name="Data"/>.
            </summary>
            <param name="PossiblePorts">An array of possible ports the device could be on.</param>
            <param name="Data">The <see cref="T:NZXTSharp.COM.SerialCOMData"/> to open the port with.</param>
        </member>
        <member name="M:NZXTSharp.COM.SerialController.Write(System.Byte[],System.Int32)">
            <summary>
            Writes the bytes in the <paramref name="buffer"/>, and returns the device's response.
            </summary>
            <param name="buffer">The bytes to write to the port.</param>
            <param name="responselength">The expected length of the response buffer (bytes).</param>
            <returns></returns>
        </member>
        <member name="M:NZXTSharp.COM.SerialController.WriteNoReponse(System.Byte[])">
            <summary>
            Writes the given <paramref name="buffer"/> to the connected device.
            </summary>
            <param name="buffer">The bytes to write.</param>
        </member>
        <member name="M:NZXTSharp.COM.SerialController.Reconnect">
            <summary>
            Disposes of and reinitializes the <see cref="T:NZXTSharp.COM.SerialController"/> instance.
            </summary>
        </member>
        <member name="M:NZXTSharp.COM.SerialController.Dispose">
            <summary>
            Disposes of the <see cref="T:NZXTSharp.COM.SerialController"/> instance.
            </summary>
        </member>
        <member name="T:NZXTSharp.COM.DeviceEnumerator">
            <summary>
            Copied from https://github.com/DarkMio/Octopode with modifications.
            </summary>
        </member>
        <member name="M:NZXTSharp.COM.DeviceEnumerator.EnumAllDevices">
            <summary>
            Enumerates all HID devices connected to the system.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing all found <see cref="T:HidLibrary.HidDevice"/>s.</returns>
        </member>
        <member name="M:NZXTSharp.COM.DeviceEnumerator.EnumNZXTDevices">
            <summary>
            Enumerates all NZXT devices connected to the system.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing all found NZXT <see cref="T:HidLibrary.HidDevice"/>s.</returns>
        </member>
        <member name="M:NZXTSharp.COM.DeviceEnumerator.EnumKrakenXDevices">
            <summary>
            Enumerates all <see cref="T:NZXTSharp.KrakenX.KrakenX"/> devices connected to the system.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing all found
            <see cref="T:NZXTSharp.KrakenX.KrakenX"/> <see cref="T:HidLibrary.HidDevice"/>s.</returns>
        </member>
        <member name="P:NZXTSharp.COM.USBController.Type">
            <summary>
            The type of device the <see cref="T:NZXTSharp.COM.USBController"/> is connected to.
            </summary>
        </member>
        <member name="P:NZXTSharp.COM.USBController.CurrentProductID">
            <summary>
            
            </summary>
        </member>
        <member name="P:NZXTSharp.COM.USBController.DeviceID">
            <summary>
            The <see cref="T:NZXTSharp.HIDDeviceID"/> of the <see cref="T:HidLibrary.HidDevice"/> the <see cref="T:NZXTSharp.COM.USBController"/> is connected to.
            </summary>
        </member>
        <member name="P:NZXTSharp.COM.USBController.LastReport">
            <summary>
            The last <see cref="T:HidLibrary.HidReport"/> received from the connected <see cref="T:HidLibrary.HidDevice"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.COM.USBController.IsAttached">
            <summary>
            Whether or not the <see cref="T:NZXTSharp.COM.USBController"/> is currently connected to its <see cref="T:HidLibrary.HidDevice"/>.
            </summary>
        </member>
        <member name="M:NZXTSharp.COM.USBController.#ctor(NZXTSharp.NZXTDeviceType)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.COM.USBController"/> and attempts to connect to a given <see cref="T:NZXTSharp.NZXTDeviceType"/>.
            </summary>
            <param name="Type"></param>
        </member>
        <member name="M:NZXTSharp.COM.USBController.Initialize">
            <summary>
            Initializes the connection to a <see cref="T:HidLibrary.HidDevice"/>.
            </summary>
        </member>
        <member name="M:NZXTSharp.COM.USBController.OnReport(HidLibrary.HidReport)">
            <summary>
            
            </summary>
            <param name="Report"></param>
        </member>
        <member name="M:NZXTSharp.COM.USBController.SimulWrite(System.Byte[][])">
            <summary>
            
            </summary>
            <param name="Buffer"></param>
        </member>
        <member name="M:NZXTSharp.COM.USBController.Dispose">
            <summary>
            Disposes of the current <see cref="T:NZXTSharp.COM.USBController"/> instance.
            </summary>
        </member>
        <member name="M:NZXTSharp.COM.USBController.Write(System.Byte[])">
            <summary>
            Writes a given <paramref name="Buffer"/> to the <see cref="T:HidLibrary.HidDevice"/> the <see cref="T:NZXTSharp.COM.USBController"/> is connected to.
            </summary>
            <param name="Buffer"></param>
        </member>
        <member name="M:NZXTSharp.COM.USBController.DeviceAttachedHandler">
            <summary>
            Triggers when the <see cref="T:NZXTSharp.COM.USBController"/> connects to a new device.
            </summary>
        </member>
        <member name="M:NZXTSharp.COM.USBController.DeviceRemovedHandler">
            <summary>
            Triggers when the <see cref="T:HidLibrary.HidDevice"/> the <see cref="T:NZXTSharp.COM.USBController"/> is connected to disconnects.
            </summary>
        </member>
        <member name="M:NZXTSharp.COM.USBController.ResolveDeviceID">
            <summary>
            Resolves the <see cref="T:NZXTSharp.HIDDeviceID"/> matching a <see cref="T:NZXTSharp.NZXTDeviceType"/>.
            </summary>
        </member>
        <member name="T:NZXTSharp.Color">
            <summary>
            Represents a color.
            </summary>
        </member>
        <member name="P:NZXTSharp.Color.R">
            <summary>
            The R value of the color.
            </summary>
        </member>
        <member name="P:NZXTSharp.Color.G">
            <summary>
            The G value of the color.
            </summary>
        </member>
        <member name="P:NZXTSharp.Color.B">
            <summary>
            The B value of the color.
            </summary>
        </member>
        <member name="M:NZXTSharp.Color.#ctor">
            <summary>
            Constructs an empty <see cref="T:NZXTSharp.Color"/>.
            </summary>
        </member>
        <member name="M:NZXTSharp.Color.#ctor(System.String)">
            <summary>
            Creates a Color instance from a hex color code.
            </summary>
            <param name="hexColor">The color code. Supports codes with a leading #, and without.</param>
        </member>
        <member name="M:NZXTSharp.Color.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a Color instance from R, G, B values.
            </summary>
            <param name="R">The color's R value. Must be 0-255 (inclusive).</param>
            <param name="G">The color's G value. Must be 0-255 (inclusive).</param>
            <param name="B">The color's B value. Must be 0-255 (inclusive).</param>
        </member>
        <member name="M:NZXTSharp.Color.AllOff">
            <summary>
            Returns a list of 40 "#ffffff" color codes in G, R, B format.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NZXTSharp.Color.Expanded">
            <summary>
            Expands the <see cref="T:NZXTSharp.Color"/> instance into a byte array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NZXTSharp.Color.ExpandedChunks(System.Int32)">
            <summary>
            Expands the <see cref="T:NZXTSharp.Color"/> instance into an array of byte arrays. Each sub array contains the RGB values for each LED.
            </summary>
            <param name="NumLeds">The number of LED triplets to create in the array.</param>
            <returns></returns>
        </member>
        <member name="T:NZXTSharp.Alternating">
            <summary>
            Represents an RGB alternating effect.
            </summary>
        </member>
        <member name="F:NZXTSharp.Alternating.CompatibleWith">
            <inheritdoc/>
        </member>
        <member name="F:NZXTSharp.Alternating.Colors">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Alternating.EffectByte">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Alternating.Channel">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Alternating.EffectName">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Alternating.#ctor(NZXTSharp.Color[])">
            <summary>
            Creates an <see cref="T:NZXTSharp.Alternating"/> effect with the given <paramref name="Colors"/>.
            </summary>
            <param name="Colors">The <see cref="T:NZXTSharp.Color"/>s to display. Must be of length (2).</param>
        </member>
        <member name="M:NZXTSharp.Alternating.#ctor(NZXTSharp.Color[],NZXTSharp.HuePlus.Direction,System.Int32)">
            <summary>
            Constructs an <see cref="T:NZXTSharp.Alternating"/> effect.
            </summary>
            <param name="Colors">The <see cref="T:NZXTSharp.Color"/> to display.</param>
            <param name="Direction">The <see cref="T:NZXTSharp.HuePlus.Direction"/> the effect will move in.</param>
            <param name="speed">Speed values must be 0-4 (inclusive). 0 being slowest, 2 being normal, and 4 being fastest. Defaults to 2.</param>
        </member>
        <member name="M:NZXTSharp.Alternating.#ctor(NZXTSharp.Color,NZXTSharp.Color,NZXTSharp.HuePlus.Direction,System.Int32)">
            <summary>
            Constructs an <see cref="T:NZXTSharp.Alternating"/> effect.
            </summary>
            <param name="Color1">The first <see cref="T:NZXTSharp.Color"/> to display.</param>
            <param name="Color2">The second <see cref="T:NZXTSharp.Color"/> to display.</param>
            <param name="Direction">The <see cref="T:NZXTSharp.HuePlus.Direction"/> the effect will move in.</param>
            <param name="speed">Speed values must be 0-4 (inclusive). 0 being slowest, 2 being normal, and 4 being fastest. Defaults to 2.</param>
        </member>
        <member name="M:NZXTSharp.Alternating.IsCompatibleWith(NZXTSharp.NZXTDeviceType)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Alternating.BuildBytes(NZXTSharp.NZXTDeviceType,NZXTSharp.IChannel)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.Breathing">
            <summary>
            Represents an RGB breathing effect.
            </summary>
        </member>
        <member name="F:NZXTSharp.Breathing.CompatibleWith">
            <inheritdoc/>
        </member>
        <member name="F:NZXTSharp.Breathing.Colors">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Breathing.EffectByte">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Breathing.Channel">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Breathing.EffectName">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Breathing.#ctor(NZXTSharp.Color[])">
            <summary>
            Constructs a <see cref="T:NZXTSharp.Breathing"/> effect.
            </summary>
            <param name="Colors">A <see cref="T:NZXTSharp.Color"/> array of colors to display.</param>
        </member>
        <member name="M:NZXTSharp.Breathing.#ctor(NZXTSharp.Color[],System.Int32)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.Breathing"/> effect.
            </summary>
            <param name="Colors">A <see cref="T:NZXTSharp.Color"/> array of colors to display.</param>
            <param name="Speed">Speed values must be 0-4 (inclusive). 0 being slowest, 2 being normal, and 4 being fastest. Defaults to 2.</param>
        </member>
        <member name="M:NZXTSharp.Breathing.IsCompatibleWith(NZXTSharp.NZXTDeviceType)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Breathing.BuildBytes(NZXTSharp.NZXTDeviceType,NZXTSharp.IChannel)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.CoveringMarquee">
            <summary>
            Represents an RGB CoveringMarquee effect.
            </summary>
        </member>
        <member name="F:NZXTSharp.CoveringMarquee.CompatibleWith">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.CoveringMarquee.EffectByte">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.CoveringMarquee.Channel">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.CoveringMarquee.EffectName">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.CoveringMarquee.#ctor(NZXTSharp.Color,NZXTSharp.Color,NZXTSharp.HuePlus.Direction,System.Int32)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.CoveringMarquee"/> effect.
            </summary>
            <param name="Color1">The first <see cref="T:NZXTSharp.Color"/> in the effect.</param>
            <param name="Color2">The second <see cref="T:NZXTSharp.Color"/> in the effect.</param>
            <param name="Direction">The <see cref="T:NZXTSharp.HuePlus.Direction"/> the effect will go in.</param>
            <param name="speed">Speed values must be 0-4 (inclusive). 0 being slowest, 2 being normal, and 4 being fastest. Defaults to 2.</param>
        </member>
        <member name="M:NZXTSharp.CoveringMarquee.#ctor(NZXTSharp.Color[],NZXTSharp.HuePlus.Direction,System.Int32)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.CoveringMarquee"/> effect.
            </summary>
            <param name="Colors"></param>
            <param name="Direction">The <see cref="T:NZXTSharp.HuePlus.Direction"/> the effect will go in.</param>
            <param name="speed">Speed values must be 0-4 (inclusive). 0 being slowest, 2 being normal, and 4 being fastest. Defaults to 2.</param>
        </member>
        <member name="M:NZXTSharp.CoveringMarquee.IsCompatibleWith(NZXTSharp.NZXTDeviceType)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.CoveringMarquee.BuildBytes(NZXTSharp.NZXTDeviceType,NZXTSharp.IChannel)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.Fading">
            <summary>
            Represents an RGB Fading effect.
            </summary>
        </member>
        <member name="F:NZXTSharp.Fading.CompatibleWith">
            <inheritdoc/>
        </member>
        <member name="F:NZXTSharp.Fading.DefaultColors">
            <summary>
            The array of colors used by the effect.
            </summary>
        </member>
        <member name="F:NZXTSharp.Fading.Colors">
            <summary>
            The colors that the effect will apply.
            </summary>
        </member>
        <member name="P:NZXTSharp.Fading.EffectByte">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Fading.Channel">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Fading.EffectName">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Fading.#ctor(NZXTSharp.Color[],System.Int32)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.Fading"/> effect.
            </summary>
            <param name="Colors">The <see cref="T:NZXTSharp.Color"/>s to display.</param>
            /// <param name="speed">Speed values must be 0-4 (inclusive). 0 being slowest, 2 being normal, and 4 being fastest. Defaults to 2.</param>
        </member>
        <member name="M:NZXTSharp.Fading.IsCompatibleWith(NZXTSharp.NZXTDeviceType)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Fading.BuildBytes(NZXTSharp.NZXTDeviceType,NZXTSharp.IChannel)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.Fixed">
            <summary>
            Represents an RGB fixed effect.
            </summary>
        </member>
        <member name="F:NZXTSharp.Fixed.CompatibleWith">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Fixed.EffectByte">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Fixed.Channel">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Fixed.EffectName">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Fixed.#ctor(NZXTSharp.Color)">
            <summary>
            Constructs an RGB Fixed effect.
            </summary>
            <param name="color">The <see cref="T:NZXTSharp.Color"/> to display.</param>
        </member>
        <member name="M:NZXTSharp.Fixed.#ctor(NZXTSharp.IChannel,NZXTSharp.Color)">
            <summary>
            Constructs an RGB Fixed effect.
            </summary>
            <param name="Channel">The <see cref="P:NZXTSharp.Fixed.Channel"/> the effect will be applied to.</param>
            <param name="color">The <see cref="T:NZXTSharp.Color"/> to display.</param>
        </member>
        <member name="M:NZXTSharp.Fixed.#ctor(System.Byte[])">
            <summary>
            Constructs an RGB Fixed effect from custom LED colors.
            </summary>
            <param name="Colors">A byte[] of RGB color values in G, R, B format.
            Length must be less than 120 and greater than 0.
            RGB values must be 0-255 (inclusive).</param>
        </member>
        <member name="M:NZXTSharp.Fixed.IsCompatibleWith(NZXTSharp.NZXTDeviceType)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Fixed.BuildBytes(NZXTSharp.NZXTDeviceType,NZXTSharp.IChannel)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.IEffect">
            <summary>
            Represents a generic RGB effect.
            </summary>
        </member>
        <member name="P:NZXTSharp.IEffect.EffectByte">
            <summary>
            The <see cref="T:NZXTSharp.IEffect"/>'s EffectByte.
            </summary>
        </member>
        <member name="P:NZXTSharp.IEffect.EffectName">
            <summary>
            The name of the <see cref="T:NZXTSharp.IEffect"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.IEffect.Channel">
            <summary>
            The <see cref="P:NZXTSharp.IEffect.Channel"/> to set the <see cref="T:NZXTSharp.IEffect"/> on.
            </summary>
        </member>
        <member name="M:NZXTSharp.IEffect.IsCompatibleWith(NZXTSharp.NZXTDeviceType)">
            <summary>
            Checks to see if the <see cref="T:NZXTSharp.IEffect"/> is compatible with a given <see cref="T:NZXTSharp.NZXTDeviceType"/> <paramref name="Type"/>.
            </summary>
            <param name="Type"></param>
            <returns></returns>
        </member>
        <member name="M:NZXTSharp.IEffect.BuildBytes(NZXTSharp.NZXTDeviceType,NZXTSharp.IChannel)">
            <summary>
            Builds and returns the buffer queue needed to set the <see cref="T:NZXTSharp.IEffect"/>.
            </summary>
            <param name="Type">The <see cref="T:NZXTSharp.NZXTDeviceType"/> to build effect bytes for.</param>
            <param name="Channel">The <see cref="T:NZXTSharp.IChannel"/> to build effect bytes for.</param>
            <returns></returns>
        </member>
        <member name="T:NZXTSharp.Marquee">
            <summary>
            Represents an RGB marquee effect.
            </summary>
        </member>
        <member name="F:NZXTSharp.Marquee.CompatibleWith">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Marquee.EffectByte">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Marquee.Channel">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Marquee.EffectName">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Marquee.#ctor(NZXTSharp.Color,NZXTSharp.LSS)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.Marquee"/> effect.
            </summary>
            <param name="Color">The <see cref="T:NZXTSharp.Color"/> of the effect.</param>
            <param name="LSS">The <see cref="T:NZXTSharp.LSS"/> param to apply.</param>
        </member>
        <member name="M:NZXTSharp.Marquee.#ctor(NZXTSharp.Color,NZXTSharp.HuePlus.Direction,NZXTSharp.LSS)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.Marquee"/> effect.
            </summary>
            <param name="Color">The <see cref="T:NZXTSharp.Color"/> of the effect.</param>
            <param name="Direction">The <see cref="T:NZXTSharp.HuePlus.Direction"/> of the effect.</param>
            <param name="LSS">The <see cref="T:NZXTSharp.LSS"/> param to apply.</param>
        </member>
        <member name="M:NZXTSharp.Marquee.IsCompatibleWith(NZXTSharp.NZXTDeviceType)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Marquee.BuildBytes(NZXTSharp.NZXTDeviceType,NZXTSharp.IChannel)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.Pulse">
            <summary>
            Represents an RGB pulse effect.
            </summary>
        </member>
        <member name="F:NZXTSharp.Pulse.CompatibleWith">
            <inheritdoc/>
        </member>
        <member name="F:NZXTSharp.Pulse.Colors">
            <summary>
            The array of colors used by the effect.
            </summary>
        </member>
        <member name="P:NZXTSharp.Pulse.EffectByte">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Pulse.Channel">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Pulse.EffectName">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Pulse.#ctor(NZXTSharp.Color[],System.Int32)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.Pulse"/> effect with the given <see cref="T:NZXTSharp.Color"/> array and speed.
            </summary>
            <param name="Colors"></param>
            <param name="Speed">Speed values must be 0-4 (inclusive). 0 being slowest, 2 being normal, and 4 being fastest. Defaults to 2.</param>
        </member>
        <member name="M:NZXTSharp.Pulse.IsCompatibleWith(NZXTSharp.NZXTDeviceType)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Pulse.BuildBytes(NZXTSharp.NZXTDeviceType,NZXTSharp.IChannel)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.SpectrumWave">
            <summary>
            Represents an RGB Spectrum Wave effect.
            </summary>
        </member>
        <member name="F:NZXTSharp.SpectrumWave.CompatibleWith">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.SpectrumWave.EffectByte">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.SpectrumWave.Channel">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.SpectrumWave.EffectName">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.SpectrumWave.#ctor(NZXTSharp.HuePlus.Direction,System.Int32)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.SpectrumWave"/> effect with the given <see cref="T:NZXTSharp.HuePlus.Direction"/>.
            </summary>
            <param name="Direction"></param>
            <param name="Speed">Speed values must be 0-4 (inclusive). 0 being slowest, 2 being normal, and 4 being fastest. Defaults to 2.</param>
        </member>
        <member name="M:NZXTSharp.SpectrumWave.IsCompatibleWith(NZXTSharp.NZXTDeviceType)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.SpectrumWave.BuildBytes(NZXTSharp.NZXTDeviceType,NZXTSharp.IChannel)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.Wings">
            <summary>
            Represents an RGB wings effect.
            </summary>
        </member>
        <member name="F:NZXTSharp.Wings.CompatibleWith">
            <inheritdoc/>
        </member>
        <member name="F:NZXTSharp.Wings.Color">
            <summary>
            The array of colors used by the effect.
            </summary>
        </member>
        <member name="P:NZXTSharp.Wings.EffectByte">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Wings.Channel">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.Wings.EffectName">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Wings.#ctor(NZXTSharp.Color,System.Int32)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.Wings"/> effect with the given <see cref="F:NZXTSharp.Wings.Color"/> array and speed.
            </summary>
            <param name="Color"></param>
            <param name="Speed">Speed values must be 0-4 (inclusive). 0 being slowest, 2 being normal, and 4 being fastest. Defaults to 2.</param>
        </member>
        <member name="M:NZXTSharp.Wings.IsCompatibleWith(NZXTSharp.NZXTDeviceType)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Wings.BuildBytes(NZXTSharp.NZXTDeviceType,NZXTSharp.IChannel)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.CISS">
            <summary>
            Represents a CISS effect param.
            </summary>
        </member>
        <member name="P:NZXTSharp.CISS.Value">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.CISS.#ctor(System.Int32)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.CISS"/> instance.
            </summary>
            <param name="speed">Speed values must be 0-4 (inclusive). 0 being slowest, 2 being normal, and 4 being fastest. Defaults to 2.</param>
        </member>
        <member name="M:NZXTSharp.CISS.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.CISS"/> instance.
            </summary>
            <param name="colorIndex">The index of the color in the list.</param>
            <param name="speed">Speed values must be 0-4 (inclusive). 0 being slowest, 2 being normal, and 4 being fastest. Defaults to 2.</param>
        </member>
        <member name="M:NZXTSharp.CISS.GetValue">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.CISS.op_Implicit(NZXTSharp.CISS)~System.Byte">
             <summary>
            
             </summary>
             <param name="param"></param>
        </member>
        <member name="T:NZXTSharp.IParam">
            <summary>
            An effect parameter.
            </summary>
        </member>
        <member name="P:NZXTSharp.IParam.Value">
            <summary>
            The int representation of the effect's byte value.
            </summary>
        </member>
        <member name="M:NZXTSharp.IParam.GetValue">
            <summary>
            Gets the int representation of the effect's byte value.
            </summary>
            <returns></returns>
        </member>
        <member name="T:NZXTSharp.LSS">
            <summary>
            Represents an LSS param.
            </summary>
        </member>
        <member name="F:NZXTSharp.LSS._CompatibleWith">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.LSS.Value">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.LSS.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs an <see cref="T:NZXTSharp.LSS"/> param.
            </summary>
            <param name="speed">Speed values must be 0-4 (inclusive). 0 being slowest, 2 being normal, and 4 being fastest. Defaults to 2.</param>
            <param name="LEDSize">The LED group size, LEDSizes must be between 3-6 (inclusive).</param>
        </member>
        <member name="M:NZXTSharp.LSS.GetValue">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.LSS.op_Implicit(NZXTSharp.LSS)~System.Byte">
             <summary>
            
             </summary>
             <param name="param"></param>
        </member>
        <member name="T:NZXTSharp.DeviceLoader">
            <summary>
            A convenient interface for loading and interacting with <see cref="T:NZXTSharp.INZXTDevice"/>s.
            </summary>
        </member>
        <member name="P:NZXTSharp.DeviceLoader.KrakenX">
            <summary>
            Returns the first <see cref="T:NZXTSharp.KrakenX.KrakenX"/> instance owned 
            by the <see cref="T:NZXTSharp.DeviceLoader"/> if one exists.
            </summary>
        </member>
        <member name="P:NZXTSharp.DeviceLoader.HuePlus">
            <summary>
            Returns the first <see cref="T:NZXTSharp.HuePlus.HuePlus"/> instance owned 
            by the <see cref="T:NZXTSharp.DeviceLoader"/> if one exists.
            </summary>
        </member>
        <member name="P:NZXTSharp.DeviceLoader.Devices">
            <summary>
            All <see cref="T:NZXTSharp.INZXTDevice"/>s owned by the <see cref="T:NZXTSharp.DeviceLoader"/> object.
            </summary>
        </member>
        <member name="P:NZXTSharp.DeviceLoader.IsInitialized">
            <summary>
            Whether or not the <see cref="T:NZXTSharp.DeviceLoader"/> is fully initialized.
            </summary>
        </member>
        <member name="P:NZXTSharp.DeviceLoader.NumDevices">
            <summary>
            Gets the number of <see cref="T:NZXTSharp.INZXTDevice"/>s owned by the <see cref="T:NZXTSharp.DeviceLoader"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.DeviceLoader.Filter">
            <summary>
            The <see cref="T:NZXTSharp.DeviceLoader"/> instance's <see cref="T:NZXTSharp.DeviceLoadFilter"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.DeviceLoader.ThrowExceptions">
            <summary>
            Whether or not the <see cref="T:NZXTSharp.DeviceLoader"/> will throw exceptions.
            </summary>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.#ctor(NZXTSharp.DeviceLoadFilter)">
            <summary>
            Creates a <see cref="T:NZXTSharp.DeviceLoader"/> instance with a given <see cref="T:NZXTSharp.DeviceLoadFilter"/>.
            </summary>
            <param name="Filter">A <see cref="T:NZXTSharp.DeviceLoadFilter"/>. Defaults to <see cref="F:NZXTSharp.DeviceLoadFilter.All"/>.</param>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.#ctor(System.Boolean,NZXTSharp.DeviceLoadFilter)">
            <summary>
            Creates a <see cref="T:NZXTSharp.DeviceLoader"/> instance with a given <see cref="T:NZXTSharp.DeviceLoadFilter"/>.
            </summary>
            <param name="InitializeDevices">Whether or not to automatically initialize and load devices. 
            Defaults to true.</param>
            <param name="Filter">A <see cref="T:NZXTSharp.DeviceLoadFilter"/>. Defaults to <see cref="F:NZXTSharp.DeviceLoadFilter.All"/></param>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.#ctor(NZXTSharp.INZXTDevice[])">
            <summary>
            Creates a <see cref="T:NZXTSharp.DeviceLoader"/> instance from a given array of <see cref="T:NZXTSharp.INZXTDevice"/>s.
            </summary>
            <param name="Devices">An array of <see cref="T:NZXTSharp.INZXTDevice"/>s.</param>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.#ctor(System.Collections.Generic.List{NZXTSharp.INZXTDevice})">
            <summary>
            Creates a <see cref="T:NZXTSharp.DeviceLoader"/> instance from a given list of <see cref="T:NZXTSharp.INZXTDevice"/>s.
            </summary>
            <param name="Devices">A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:NZXTSharp.INZXTDevice"/>s.</param>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{NZXTSharp.INZXTDevice})">
            <summary>
            Creates a <see cref="T:NZXTSharp.DeviceLoader"/> instance from a given list of <see cref="T:NZXTSharp.INZXTDevice"/>s.
            </summary>
            <param name="Devices">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> of <see cref="T:NZXTSharp.INZXTDevice"/>s.</param>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.Initialize">
            <summary>
            Initializes and loads all NZXT devices found on the system.
            </summary>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.ApplyEffectToDevices(NZXTSharp.IEffect)">
            <summary>
            Applies a given <see cref="T:NZXTSharp.IEffect"/> to all devices owned by the 
            <see cref="T:NZXTSharp.DeviceLoader"/> instance which have RGB capabilites.
            </summary>
            <param name="Effect">An <see cref="T:NZXTSharp.IEffect"/> to apply.</param>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.AddDevice(NZXTSharp.INZXTDevice)">
            <summary>
            Adds an <see cref="T:NZXTSharp.INZXTDevice"/> instance to the <see cref="T:NZXTSharp.DeviceLoader"/>'s devices array.
            </summary>
            <param name="Device">The device to add.</param>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.RemoveDevice(NZXTSharp.NZXTDeviceType)">
            <summary>
            Removes the first occurrance of an <see cref="T:NZXTSharp.INZXTDevice"/> with the given <paramref name="Type"/>.
            </summary>
            <param name="Type">The <see cref="T:NZXTSharp.NZXTDeviceType"/> to remove.</param>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.RemoveDevice(NZXTSharp.INZXTDevice)">
            <summary>
            Removes a given <see cref="T:NZXTSharp.INZXTDevice"/> from the <see cref="T:NZXTSharp.DeviceLoader"/> array.
            </summary>
            <param name="Device">The <see cref="T:NZXTSharp.INZXTDevice"/> to remove.</param>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.Dispose">
            <summary>
            Disposes of all <see cref="T:NZXTSharp.INZXTDevice"/> instances owned by the <see cref="T:NZXTSharp.DeviceLoader"/>.
            </summary>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.Reconnect">
            <summary>
            Reconnects to all <see cref="T:NZXTSharp.INZXTDevice"/> instances owned by the <see cref="T:NZXTSharp.DeviceLoader"/>.
            </summary>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.ReInitialize">
            <summary>
            Disposes of all <see cref="T:NZXTSharp.INZXTDevice"/> instances owned by the <see cref="T:NZXTSharp.DeviceLoader"/>,
            and re-initializes the <see cref="T:NZXTSharp.DeviceLoader"/>.
            </summary>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.ModifyFilter(NZXTSharp.DeviceLoadFilter)">
            <summary>
            Changes the <see cref="T:NZXTSharp.DeviceLoader"/> instance's filter to a new 
            <see cref="T:NZXTSharp.DeviceLoadFilter"/> <paramref name="Filter"/>
            </summary>
            <param name="Filter">The new <see cref="T:NZXTSharp.DeviceLoadFilter"/></param>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.FilterDevices(NZXTSharp.DeviceLoadFilter)">
            <summary>
            Filters the existing devices in <see cref="P:NZXTSharp.DeviceLoader.Devices"/>
            based on the given <see cref="T:NZXTSharp.DeviceLoadFilter"/>.
            </summary>
            <param name="Filter">What kinds of devices to keep.</param>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.SetFanSpeed(System.Int32)">
            <summary>
            Sets all fans owned by all <see cref="T:NZXTSharp.INZXTDevice"/>s owned by the
            <see cref="T:NZXTSharp.DeviceLoader"/> to a given <paramref name="Speed"/>.
            </summary>
            <param name="Speed">The speed to set (percentage).</param>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.SetPumpSpeed(System.Int32)">
            <summary>
            Sets pumps owned by <see cref="T:NZXTSharp.INZXTDevice"/>s owned by the
            <see cref="T:NZXTSharp.DeviceLoader"/> to a given <paramref name="Speed"/>.
            </summary>
            <param name="Speed">The speed to set (percentage).</param>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.LightingOn">
            <summary>
            Turns all RGB lighting channels of all <see cref="T:NZXTSharp.INZXTDevice"/>s 
            owned by the <see cref="T:NZXTSharp.DeviceLoader"/> instance on.
            </summary>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.LightingOff">
            <summary>
            Turns all RGB lighting channels of all <see cref="T:NZXTSharp.INZXTDevice"/>s 
            owned by the <see cref="T:NZXTSharp.DeviceLoader"/> instance off.
            </summary>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.ToggleThrowExceptions">
            <summary>
            Toggles whether or not the <see cref="T:NZXTSharp.DeviceLoader"/> throws exceptions.
            </summary>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.op_Implicit(NZXTSharp.DeviceLoader)~NZXTSharp.INZXTDevice[]">
            <summary>
            Implicitly converts the <see cref="T:NZXTSharp.DeviceLoader"/> to an array of <see cref="T:NZXTSharp.INZXTDevice"/>s.
            </summary>
            <param name="Loader"></param>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.op_Implicit(NZXTSharp.DeviceLoader)~System.Collections.Generic.List{NZXTSharp.INZXTDevice}">
            <summary>
            Implicitly converts the <see cref="T:NZXTSharp.DeviceLoader"/> to a <see cref="T:System.Collections.Generic.List`1"/>
            of <see cref="T:NZXTSharp.INZXTDevice"/>s.
            </summary>
            <param name="Loader"></param>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.GetDevices(NZXTSharp.DeviceLoadFilter,System.Boolean)">
            <summary>
            Gets and returns all connected devices.
            </summary>
            <param name="Filter">A <see cref="T:NZXTSharp.DeviceLoadFilter"/>, returned devices will only include
            devices that fit into categories as defined by the filter.</param>
            <returns>An array of all NZXT devices connected to the system.</returns>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.TryGetHIDDevices(NZXTSharp.DeviceLoadFilter)">
            <summary>
            Tries to get all NZXT HID devices connected to the system.
            </summary>
            <param name="Filter"></param>
            <returns>An array of <see cref="T:NZXTSharp.INZXTDevice"/>s.</returns>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.TryGetSerialDevices(NZXTSharp.DeviceLoadFilter,System.Boolean)">
            <summary>
            Tries to get all NZXT Serial devices connected to the system.
            </summary>
            <param name="Filter"></param>
            <param name="ThrowExceptions"></param>
            <returns>An array of <see cref="T:NZXTSharp.INZXTDevice"/>s.</returns>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.InstantiateSerialDevices(System.Collections.Generic.List{NZXTSharp.NZXTDeviceType},NZXTSharp.DeviceLoadFilter)">
            <summary>
            Creates instances of found <see cref="T:NZXTSharp.INZXTDevice"/>s that operate
            on a serial protocol.
            </summary>
            <param name="Devices">A List of <see cref="T:NZXTSharp.INZXTDevice"/>s found by 
            <see cref="!:DeviceLoader.TryGetSerialDevices(DeviceLoadFilter)"/></param>
            <param name="Filter"></param>
            <returns>An array containing instances of found <see cref="T:NZXTSharp.INZXTDevice"/>s.</returns>
        </member>
        <member name="M:NZXTSharp.DeviceLoader.InstantiateHIDDevices(System.Collections.Generic.List{HidLibrary.HidDevice},NZXTSharp.DeviceLoadFilter)">
            <summary>
            Creates instances of found <see cref="T:NZXTSharp.INZXTDevice"/>s that operate
            on an HID protocol.
            </summary>
            <param name="Devices">A list of <see cref="T:NZXTSharp.INZXTDevice"/>s found by
            <see cref="M:NZXTSharp.DeviceLoader.TryGetHIDDevices(NZXTSharp.DeviceLoadFilter)"/></param>
            <param name="Filter"></param>
            <returns>An array containing instances of found HID devices.</returns>
        </member>
        <member name="T:NZXTSharp.MapFilterToSupportedIDs">
            <summary>
            Maps a <see cref="T:NZXTSharp.DeviceLoadFilter"/> to the HID IDs of devices included in that filter.
            </summary>
        </member>
        <member name="T:NZXTSharp.MapIDtoInstance">
            <summary>
            Maps an HID device ID to an instance of that device's corresponding <see cref="T:NZXTSharp.INZXTDevice"/>.
            </summary>
        </member>
        <member name="T:NZXTSharp.DeviceLoadFilter">
            <summary>
            Defines filters for getting loaded devices.
            Ex. DeviceLoadFilter.Coolers will return ONLY coolers.
            </summary>
        </member>
        <member name="F:NZXTSharp.DeviceLoadFilter.All">
            <summary>
            All Devices
            </summary>
        </member>
        <member name="F:NZXTSharp.DeviceLoadFilter.Coolers">
            <summary>
            Any Cooler
            </summary>
        </member>
        <member name="F:NZXTSharp.DeviceLoadFilter.LightingControllers">
            <summary>
            Any Lighting Controller
            </summary>
        </member>
        <member name="F:NZXTSharp.DeviceLoadFilter.FanControllers">
            <summary>
            Any Fan Controller
            </summary>
        </member>
        <member name="F:NZXTSharp.DeviceLoadFilter.Kraken">
            <summary>
            Any Kraken Device
            </summary>
        </member>
        <member name="F:NZXTSharp.DeviceLoadFilter.KrakenM">
            <summary>
            Any KrakenM Device
            </summary>
        </member>
        <member name="F:NZXTSharp.DeviceLoadFilter.KrakenX">
            <summary>
            Any KrakenX Device
            </summary>
        </member>
        <member name="F:NZXTSharp.DeviceLoadFilter.Grid">
            <summary>
            Any Grid Device
            </summary>
        </member>
        <member name="F:NZXTSharp.DeviceLoadFilter.Gridv3">
            <summary>
            Any Gridv3 Device
            </summary>
        </member>
        <member name="F:NZXTSharp.DeviceLoadFilter.Hue">
            <summary>
            Any Hue Device
            </summary>
        </member>
        <member name="F:NZXTSharp.DeviceLoadFilter.HuePlus">
            <summary>
            Any Hue+ Device
            </summary>
        </member>
        <member name="F:NZXTSharp.DeviceLoadFilter.Hue2">
            <summary>
            Any Hue2 Device
            </summary>
        </member>
        <member name="F:NZXTSharp.DeviceLoadFilter.HueAmbient">
            <summary>
            Any Hue Ambient Devices
            </summary>
        </member>
        <member name="T:NZXTSharp.HIDDeviceID">
            <summary>
            Contains the Manufacturer and Product IDs of NZXT devices.
            </summary>
        </member>
        <member name="F:NZXTSharp.HIDDeviceID.Unknown">
            <summary>
            An unknown ID.
            </summary>
        </member>
        <member name="F:NZXTSharp.HIDDeviceID.VendorID">
            <summary>
            The NZXT vendor ID.
            </summary>
        </member>
        <member name="F:NZXTSharp.HIDDeviceID.KrakenM">
            <summary>
            A KrakenM Device.
            </summary>
        </member>
        <member name="F:NZXTSharp.HIDDeviceID.KrakenX">
            <summary>
            A KrakenX Device.
            </summary>
        </member>
        <member name="F:NZXTSharp.HIDDeviceID.Hue2">
            <summary>
            A Hue 2 Device
            </summary>
        </member>
        <member name="F:NZXTSharp.HIDDeviceID.HueAmbient">
            <summary>
            A Hue Ambient Device.
            </summary>
        </member>
        <member name="F:NZXTSharp.HIDDeviceID.GridV2">
            <summary>
            A Grid v2 Device.
            </summary>
        </member>
        <member name="F:NZXTSharp.HIDDeviceID.GridV3">
            <summary>
            A Grid v3 Device.
            </summary>
        </member>
        <member name="F:NZXTSharp.HIDDeviceID.N7">
            <summary>
            An N7 Z370 Device.
            </summary>
        </member>
        <member name="F:NZXTSharp.HIDDeviceID.N7_Z390">
            <summary>
            An N7 Z390 Device.
            </summary>
        </member>
        <member name="F:NZXTSharp.HIDDeviceID.H7Lumi">
            <summary>
            A Cryorig H7 Quad Lumi Device.
            </summary>
        </member>
        <member name="F:NZXTSharp.HIDDeviceID.SmartDevice">
            <summary>
            An NZXT smart device.
            </summary>
        </member>
        <member name="T:NZXTSharp.NZXTDeviceType">
            <summary>
            Definitions of unique IDs for all NZXT devices.
            </summary>
        </member>
        <member name="F:NZXTSharp.NZXTDeviceType.Unknown">
            <summary>
            If device type is unknown.
            </summary>
        </member>
        <member name="F:NZXTSharp.NZXTDeviceType.NotActive">
            <summary>
            
            </summary>
        </member>
        <member name="F:NZXTSharp.NZXTDeviceType.Fan">
            <summary>
            Any fan, RGB or otherwise.
            </summary>
        </member>
        <member name="F:NZXTSharp.NZXTDeviceType.Strip">
            <summary>
            An RGB strip.
            </summary>
        </member>
        <member name="F:NZXTSharp.NZXTDeviceType.Kraken">
            <summary>
            A generic Kraken device.
            </summary>
        </member>
        <member name="F:NZXTSharp.NZXTDeviceType.KrakenX">
            <summary>
            A generic KrakenX device.
            </summary>
        </member>
        <member name="F:NZXTSharp.NZXTDeviceType.KrakenM">
            <summary>
            A generic KrakenM device.
            </summary>
        </member>
        <member name="F:NZXTSharp.NZXTDeviceType.Hue">
            <summary>
            A generic Hue device.
            </summary>
        </member>
        <member name="F:NZXTSharp.NZXTDeviceType.Motherboard">
            <summary>
            A generic motherboard device.
            </summary>
        </member>
        <member name="F:NZXTSharp.NZXTDeviceType.Grid">
            <summary>
            A generic Grid device.
            </summary>
        </member>
        <member name="T:NZXTSharp.Exceptions.IncompatibleDeviceTypeException">
            <summary>
            Thrown when an <see cref="T:NZXTSharp.NZXTDeviceType"/> is passed to a method
            or constructor that is not compatible with that method or constructor.
            </summary>
        </member>
        <member name="M:NZXTSharp.Exceptions.IncompatibleDeviceTypeException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NZXTSharp.Exceptions.IncompatibleDeviceTypeException.#ctor(System.String)">
            <summary>
            Constructs an <see cref="T:NZXTSharp.Exceptions.IncompatibleDeviceTypeException"/> with a custom message.
            </summary>
            <param name="message">A custom message.</param>
        </member>
        <member name="M:NZXTSharp.Exceptions.IncompatibleDeviceTypeException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.Exceptions.IncompatibleEffectException">
            <summary>
            Thrown when an effect passed to <see cref="M:NZXTSharp.INZXTDevice.ApplyEffect(NZXTSharp.IEffect)"/> 
            is not compatible with that <see cref="T:NZXTSharp.INZXTDevice"/>.
            </summary>
        </member>
        <member name="M:NZXTSharp.Exceptions.IncompatibleEffectException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Exceptions.IncompatibleEffectException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Exceptions.IncompatibleEffectException.#ctor(System.String,System.String)">
            <summary>
            Constructs an <see cref="T:NZXTSharp.Exceptions.IncompatibleEffectException"/> with more information
            about the <see cref="T:NZXTSharp.INZXTDevice"/> and <see cref="T:NZXTSharp.IEffect"/>.
            </summary>
            <param name="DeviceName"></param>
            <param name="EffectName"></param>
        </member>
        <member name="M:NZXTSharp.Exceptions.IncompatibleEffectException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.Exceptions.IncompatibleParamException">
            <summary>
            Thrown when a param object passed to an <see cref="T:NZXTSharp.IEffect"/> 
            constructor is not compatible with that <see cref="T:NZXTSharp.IEffect"/>.
            </summary>
        </member>
        <member name="M:NZXTSharp.Exceptions.IncompatibleParamException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Exceptions.IncompatibleParamException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Exceptions.IncompatibleParamException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.Exceptions.InvalidEffectSpeedException">
             <summary>
            Thrown when an invalid speed value is passed to an
             <see cref="T:NZXTSharp.IParam"/> or <see cref="T:NZXTSharp.IEffect"/> constructor.
             
             Speed values must be 0 - 4 (inclusive); 
             0 being slowest, 2 being normal, and 4 being fastest.
             </summary>
        </member>
        <member name="M:NZXTSharp.Exceptions.InvalidEffectSpeedException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Exceptions.InvalidEffectSpeedException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Exceptions.InvalidEffectSpeedException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.Exceptions.InvalidParamException">
            <summary>
            
            </summary>
        </member>
        <member name="M:NZXTSharp.Exceptions.InvalidParamException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:NZXTSharp.Exceptions.InvalidParamException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:NZXTSharp.Exceptions.InvalidParamException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:NZXTSharp.Exceptions.MaxHandshakeRetryExceededException">
            <summary>
            Thrown when the maximum number of handshake attempts 
            has been exceeded during device intitialization.
            
            Max Retry Count is 5 by default.
            </summary>
        </member>
        <member name="M:NZXTSharp.Exceptions.MaxHandshakeRetryExceededException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Exceptions.MaxHandshakeRetryExceededException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Exceptions.MaxHandshakeRetryExceededException.#ctor(System.Int32)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.Exceptions.MaxHandshakeRetryExceededException"/>,
            with more information about the max handshake retry.
            </summary>
            <param name="MaxCount">The max retry count.</param>
        </member>
        <member name="M:NZXTSharp.Exceptions.MaxHandshakeRetryExceededException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.Exceptions.SubDeviceDoesNotExistException">
            <summary>
            Thrown When a user attempts to reference an
            <see cref="T:NZXTSharp.ISubDevice"/>that does not exist.
            </summary>
        </member>
        <member name="M:NZXTSharp.Exceptions.SubDeviceDoesNotExistException.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Exceptions.SubDeviceDoesNotExistException.#ctor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Exceptions.SubDeviceDoesNotExistException.#ctor(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.IntExtensions.DegreesCtoF(System.Nullable{System.Int32})">
            <summary>
            Converts a temp measurment in degrees C to degrees F.
            </summary>
            <param name="DegreesC">The temp value in degrees C</param>
            <returns>The value of <paramref name="DegreesC"/> in degrees F.</returns>
        </member>
        <member name="T:NZXTSharp.IChannel">
            <summary>
            Represents an RGB or Fan channel on an <see cref="T:NZXTSharp.INZXTDevice"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.IChannel.ChannelByte">
            <summary>
            The ChannelByte of the <see cref="T:NZXTSharp.IChannel"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.IChannel.State">
            <summary>
            Whether or not the <see cref="T:NZXTSharp.IChannel"/> is on.
            </summary>
        </member>
        <member name="M:NZXTSharp.IChannel.BuildColorBytes(NZXTSharp.Color)">
            <summary>
            Builds color bytes for an RGB effect for a given <see cref="T:NZXTSharp.Color"/>.
            </summary>
            <param name="Color"></param>
            <returns></returns>
        </member>
        <member name="M:NZXTSharp.IChannel.BuildColorBytes(System.Byte[])">
            <summary>
            Builds color bytes for an RGB effect for a given custom color set.
            </summary>
            <param name="Custom"></param>
            <returns></returns>
        </member>
        <member name="T:NZXTSharp.INZXTDevice">
            <summary>
            Represents an NZXT device.
            </summary>
        </member>
        <member name="P:NZXTSharp.INZXTDevice.Type">
            <summary>
            The <see cref="T:NZXTSharp.NZXTDeviceType"/> of the <see cref="T:NZXTSharp.INZXTDevice"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.INZXTDevice.ID">
            <summary>
            A unique device ID.
            </summary>
        </member>
        <member name="M:NZXTSharp.INZXTDevice.ApplyEffect(NZXTSharp.IEffect)">
            <summary>
            Applies an <see cref="T:NZXTSharp.IEffect"/> to the <see cref="T:NZXTSharp.INZXTDevice"/>.
            </summary>
            <param name="Effect">The <see cref="T:NZXTSharp.IEffect"/> to apply.</param>
        </member>
        <member name="M:NZXTSharp.INZXTDevice.Dispose">
            <summary>
            Disposes of the <see cref="T:NZXTSharp.INZXTDevice"/> instance.
            </summary>
        </member>
        <member name="M:NZXTSharp.INZXTDevice.Reconnect">
            <summary>
            Attempts to reconnect to the <see cref="T:NZXTSharp.INZXTDevice"/>.
            </summary>
        </member>
        <member name="T:NZXTSharp.Fan">
            <summary>
            Represents a fan.
            </summary>
        </member>
        <member name="P:NZXTSharp.Fan.IsActive">
            <summary>
            Whether or not the current <see cref="T:NZXTSharp.Fan"/> instance is active (on).
            </summary>
        </member>
        <member name="P:NZXTSharp.Fan.Type">
            <summary>
            Returns the <see cref="T:NZXTSharp.NZXTDeviceType"/> of the fan.
            </summary>
        </member>
        <member name="P:NZXTSharp.Fan.NumLeds">
            <summary>
            Returns the number of LEDs available on the <see cref="T:NZXTSharp.Fan"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.Fan.Leds">
            <summary>
            A list containing the power states of the <see cref="T:NZXTSharp.Fan"/>'s LEDs.
            </summary>
        </member>
        <member name="M:NZXTSharp.Fan.#ctor">
            <summary>
            Constructs a <see cref="T:NZXTSharp.Fan"/> instance.
            </summary>
        </member>
        <member name="M:NZXTSharp.Fan.ToggleState">
            <summary>
            Toggles the <see cref="T:NZXTSharp.Fan"/>'s state.
            </summary>
        </member>
        <member name="M:NZXTSharp.Fan.SetState(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Fan.ToggleLed(System.Int32)">
            <summary>
            Toggles a specific LED owned by the <see cref="T:NZXTSharp.Fan"/> device.
            </summary>
            <param name="Index">The index in the <see cref="T:NZXTSharp.Fan"/>'s <see cref="P:NZXTSharp.Fan.Leds"/> list to toggle.</param>
        </member>
        <member name="M:NZXTSharp.Fan.ToggleLedRange(System.Int32,System.Int32)">
            <summary>
            Toggles all LEDs between a given <paramref name="Start"/> and <paramref name="End"/> index.
            </summary>
            <param name="Start">The index in the <see cref="T:NZXTSharp.Fan"/>'s <see cref="P:NZXTSharp.Fan.Leds"/> list to start at.</param>
            <param name="End">The index in the <see cref="T:NZXTSharp.Fan"/>'s <see cref="P:NZXTSharp.Fan.Leds"/> list to end at.</param>
        </member>
        <member name="M:NZXTSharp.Fan.SetLedRange(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets all LEDs between a given <paramref name="Start"/> index and an <paramref name="End"/> index to a given <paramref name="Value"/>.
            </summary>
            <param name="Start">The index in the <see cref="T:NZXTSharp.Fan"/>'s <see cref="P:NZXTSharp.Fan.Leds"/> list to start at.</param>
            <param name="End">The index in the <see cref="T:NZXTSharp.Fan"/>'s <see cref="P:NZXTSharp.Fan.Leds"/> list to end at.</param>
            <param name="Value">The value to set each LED to.</param>
        </member>
        <member name="M:NZXTSharp.Fan.AllLedOn">
            <summary>
            Sets all LEDs in the <see cref="T:NZXTSharp.Fan"/>'s <see cref="P:NZXTSharp.Fan.Leds"/> list to true.
            </summary>
        </member>
        <member name="M:NZXTSharp.Fan.AllLedOff">
            <summary>
            Sets all LEDs in the <see cref="T:NZXTSharp.Fan"/>'s <see cref="P:NZXTSharp.Fan.Leds"/> list to false.
            </summary>
        </member>
        <member name="M:NZXTSharp.Fan.LedsToString">
            <summary>
            Returns a string with all LED states.
            </summary>
            <returns></returns>
        </member>
        <member name="T:NZXTSharp.ISubDevice">
            <summary>
            Represents a sub device.
            </summary>
        </member>
        <member name="P:NZXTSharp.ISubDevice.Type">
            <summary>
            The <see cref="T:NZXTSharp.ISubDevice"/>'s <see cref="T:NZXTSharp.NZXTDeviceType"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.ISubDevice.IsActive">
            <summary>
            Whether or not the current <see cref="T:NZXTSharp.ISubDevice"/> instance is active (on).
            </summary>
        </member>
        <member name="P:NZXTSharp.ISubDevice.NumLeds">
            <summary>
            Returns the number of LEDs available on the <see cref="T:NZXTSharp.ISubDevice"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.ISubDevice.Leds">
            <summary>
            A list containing the power states of the <see cref="T:NZXTSharp.ISubDevice"/>'s LEDs.
            </summary>
        </member>
        <member name="M:NZXTSharp.ISubDevice.ToggleState">
            <summary>
            Toggles the <see cref="T:NZXTSharp.ISubDevice"/>'s state.
            </summary>
        </member>
        <member name="M:NZXTSharp.ISubDevice.SetState(System.Boolean)">
            <summary>
            Sets the <see cref="T:NZXTSharp.ISubDevice"/>'s state.
            </summary>
            <param name="State">The state to set the <see cref="T:NZXTSharp.ISubDevice"/> to. true: on, false: off.</param>
        </member>
        <member name="M:NZXTSharp.ISubDevice.ToggleLed(System.Int32)">
            <summary>
            Toggles a specific LED owned by the <see cref="T:NZXTSharp.ISubDevice"/>.
            </summary>
            <param name="Index">The index in the <see cref="T:NZXTSharp.ISubDevice"/>'s <see cref="P:NZXTSharp.ISubDevice.Leds"/> list to toggle.</param>
        </member>
        <member name="M:NZXTSharp.ISubDevice.ToggleLedRange(System.Int32,System.Int32)">
            <summary>
            Toggles all LEDs between a given <paramref name="Start"/> and <paramref name="End"/> index.
            </summary>
            <param name="Start">The index in the <see cref="T:NZXTSharp.ISubDevice"/>'s <see cref="P:NZXTSharp.ISubDevice.Leds"/> list to start at.</param>
            <param name="End">The index in the <see cref="T:NZXTSharp.ISubDevice"/>'s <see cref="P:NZXTSharp.ISubDevice.Leds"/> list to end at.</param>
        </member>
        <member name="M:NZXTSharp.ISubDevice.SetLedRange(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets all LEDs between a given <paramref name="Start"/> index and an <paramref name="End"/> index to a given <paramref name="Value"/>.
            </summary>
            <param name="Start">The index in the <see cref="T:NZXTSharp.ISubDevice"/>'s <see cref="P:NZXTSharp.ISubDevice.Leds"/> list to start at.</param>
            <param name="End">The index in the <see cref="T:NZXTSharp.ISubDevice"/>'s <see cref="P:NZXTSharp.ISubDevice.Leds"/> list to end at.</param>
            <param name="Value">The value to set each LED to.</param>
        </member>
        <member name="M:NZXTSharp.ISubDevice.AllLedOn">
            <summary>
            Sets all LEDs in the <see cref="T:NZXTSharp.ISubDevice"/>'s <see cref="P:NZXTSharp.ISubDevice.Leds"/> list to true.
            </summary>
        </member>
        <member name="M:NZXTSharp.ISubDevice.AllLedOff">
            <summary>
            Sets all LEDs in the <see cref="T:NZXTSharp.ISubDevice"/>'s <see cref="P:NZXTSharp.ISubDevice.Leds"/> list to false.
            </summary>
        </member>
        <member name="M:NZXTSharp.ISubDevice.LedsToString">
            <summary>
            Returns a string with all LED states.
            </summary>
            <returns></returns>
        </member>
        <member name="T:NZXTSharp.Strip">
            <summary>
            Represents an RGB Strip subdevice.
            </summary>
        </member>
        <member name="P:NZXTSharp.Strip.IsActive">
            <summary>
            Whether or not the current <see cref="T:NZXTSharp.Strip"/> instance is active (on).
            </summary>
        </member>
        <member name="P:NZXTSharp.Strip.Type">
            <summary>
            Returns the <see cref="T:NZXTSharp.NZXTDeviceType"/> of the fan.
            </summary>
        </member>
        <member name="P:NZXTSharp.Strip.NumLeds">
            <summary>
            Returns the number of LEDs available on the <see cref="T:NZXTSharp.Strip"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.Strip.Leds">
            <summary>
            A list containing the power states of the <see cref="T:NZXTSharp.Strip"/>'s LEDs.
            </summary>
        </member>
        <member name="M:NZXTSharp.Strip.#ctor">
            <summary>
            Constructs a <see cref="T:NZXTSharp.Strip"/> instance.
            </summary>
        </member>
        <member name="M:NZXTSharp.Strip.ToggleState">
            <summary>
            Toggles the <see cref="T:NZXTSharp.Strip"/>'s state.
            </summary>
        </member>
        <member name="M:NZXTSharp.Strip.SetState(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.Strip.ToggleLed(System.Int32)">
            <summary>
            Toggles a specific LED owned by the <see cref="T:NZXTSharp.Strip"/> device.
            </summary>
            <param name="Index">The index in the <see cref="T:NZXTSharp.Strip"/>'s <see cref="P:NZXTSharp.Strip.Leds"/> list to toggle.</param>
        </member>
        <member name="M:NZXTSharp.Strip.ToggleLedRange(System.Int32,System.Int32)">
            <summary>
            Toggles all LEDs between a given <paramref name="Start"/> and <paramref name="End"/> index.
            </summary>
            <param name="Start">The index in the <see cref="T:NZXTSharp.Strip"/>'s <see cref="P:NZXTSharp.Strip.Leds"/> list to start at.</param>
            <param name="End">The index in the <see cref="T:NZXTSharp.Strip"/>'s <see cref="P:NZXTSharp.Strip.Leds"/> list to end at.</param>
        </member>
        <member name="M:NZXTSharp.Strip.SetLedRange(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets all LEDs between a given <paramref name="Start"/> index and an <paramref name="End"/> index to a given <paramref name="Value"/>.
            </summary>
            <param name="Start">The index in the <see cref="T:NZXTSharp.Strip"/>'s <see cref="P:NZXTSharp.Strip.Leds"/> list to start at.</param>
            <param name="End">The index in the <see cref="T:NZXTSharp.Strip"/>'s <see cref="P:NZXTSharp.Strip.Leds"/> list to end at.</param>
            <param name="Value">The value to set each LED to.</param>
        </member>
        <member name="M:NZXTSharp.Strip.AllLedOn">
            <summary>
            Sets all LEDs in the <see cref="T:NZXTSharp.Strip"/>'s <see cref="P:NZXTSharp.Strip.Leds"/> list to true.
            </summary>
        </member>
        <member name="M:NZXTSharp.Strip.AllLedOff">
            <summary>
            Sets all LEDs in the <see cref="T:NZXTSharp.Strip"/>'s <see cref="P:NZXTSharp.Strip.Leds"/> list to false.
            </summary>
        </member>
        <member name="M:NZXTSharp.Strip.LedsToString">
            <summary>
            Returns a string with all LED states.
            </summary>
            <returns></returns>
        </member>
        <member name="T:NZXTSharp.HuePlus.CandleLight">
            <summary>
            Represents an RGB Candle Light effect.
            </summary>
        </member>
        <member name="F:NZXTSharp.HuePlus.CandleLight.CompatibleWith">
            <inheritdoc/>
        </member>
        <member name="F:NZXTSharp.HuePlus.CandleLight.Color">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.HuePlus.CandleLight.EffectByte">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.HuePlus.CandleLight.Channel">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.HuePlus.CandleLight.EffectName">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.HuePlus.CandleLight.#ctor(NZXTSharp.Color)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.HuePlus.CandleLight"/> effect with a given <paramref name="Color"/>.
            </summary>
            <param name="Color">The <see cref="F:NZXTSharp.HuePlus.CandleLight.Color"/> to display.</param>
        </member>
        <member name="M:NZXTSharp.HuePlus.CandleLight.IsCompatibleWith(NZXTSharp.NZXTDeviceType)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.HuePlus.CandleLight.BuildBytes(NZXTSharp.NZXTDeviceType,NZXTSharp.IChannel)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.HuePlus.LogHandler">
            <summary>
            Triggers when a generic log message is sent.
            </summary>
        </member>
        <member name="T:NZXTSharp.HuePlus.DataRecieved">
            <summary>
            Triggers when data is received from the COM port.
            </summary>
        </member>
        <member name="T:NZXTSharp.HuePlus.HuePlus">
            <summary>
            Represents an NZXT Hue+ lighting controller.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlus.Name">
            <summary>
            The device's product name.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlus.Both">
            <summary>
            A <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/> object representing both channels on the <see cref="T:NZXTSharp.HuePlus.HuePlus"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlus.Channel1">
            <summary>
            A <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/> object representing the Channel 1 of the <see cref="T:NZXTSharp.HuePlus.HuePlus"/> device.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlus.Channel2">
            <summary>
            A <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/> object representing the Channel 2 of the <see cref="T:NZXTSharp.HuePlus.HuePlus"/> device.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlus.Channels">
            <summary>
            A <see cref="T:System.Collections.Generic.List`1"/> containing all <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/> objects owned by the <see cref="T:NZXTSharp.HuePlus.HuePlus"/> device.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlus.CustomName">
            <summary>
            A custom name for the <see cref="T:NZXTSharp.HuePlus.HuePlus"/> instance.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlus.Type">
            <summary>
            The <see cref="T:NZXTSharp.NZXTDeviceType"/> of the <see cref="T:NZXTSharp.HuePlus.HuePlus"/> object.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlus.ID">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlus.FirmwareVersion">
            <summary>
            The firmware version of the <see cref="T:NZXTSharp.HuePlus.HuePlus"/> device.
            </summary>
        </member>
        <member name="E:NZXTSharp.HuePlus.HuePlus.OnLogMessage">
            <summary>
            Triggers when a generic log message is sent.
            </summary>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlus.#ctor">
            <summary>
            Constructs a <see cref="T:NZXTSharp.HuePlus.HuePlus"/> instance.
            </summary>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlus.#ctor(System.Int32,System.String)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.HuePlus.HuePlus"/> instance with a custom <paramref name="MaxHandshakeRetry"/> count,
            and a custom name <paramref name="CustomName"/>.
            </summary>
            <param name="MaxHandshakeRetry"></param>
            <param name="CustomName">A custom name for the <see cref="T:NZXTSharp.HuePlus.HuePlus"/> instance.</param>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlus.Reconnect">
            <summary>
            Disposes of and reconnects to the device's <see cref="T:NZXTSharp.COM.SerialController"/>.
            </summary>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlus.Dispose">
            <summary>
            Disposes of the device's <see cref="T:NZXTSharp.COM.SerialController"/>.
            </summary>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlus.ApplyEffect(NZXTSharp.IEffect)">
            <summary>
            Applies an <paramref name="Effect"/> to both channels.
            </summary>
            <param name="Effect">An <see cref="T:NZXTSharp.IEffect"/>.</param>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlus.ApplyEffect(NZXTSharp.HuePlus.HuePlusChannel,NZXTSharp.IEffect,System.Boolean)">
            <summary>
            Applies the given <paramref name="effect"/> to the given <paramref name="channel"/>.
            </summary>
            <param name="channel">The <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/> to apply the effect to.</param>
            <param name="effect">The <see cref="T:NZXTSharp.IEffect"/> to apply.</param>
            <param name="SaveToChannel">Whether or not to save the given effect to the given channel.</param>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlus.ApplyCustom(System.Byte[])">
            <summary>
            Writes a custom <paramref name="Buffer"/> to the device's <see cref="T:NZXTSharp.COM.SerialController"/>.
            </summary>
            <param name="Buffer">The buffer to write to the device.</param>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlus.UnitLedOn">
            <summary>
            Turns the device's unit led on.
            </summary>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlus.UnitLedOff">
            <summary>
            Turns the device's unit led off.
            </summary>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlus.SetUnitLed(System.Boolean)">
            <summary>
            Sets the device's unit led state. true: on, false: off.
            </summary>
            <param name="State">Which state to set the LED to; true: on, false: off.</param>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlus.GetFirmwareVersion">
            <summary>
            Gets the <see cref="T:NZXTSharp.HuePlus.HuePlus"/> device's firmware version.
            Based on the method found in a decompile of CAM.
            </summary>
            <returns>A <see cref="T:System.Version"/> object.</returns>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlus.UpdateChannelInfo(NZXTSharp.HuePlus.HuePlusChannel)">
            <summary>
            Updates the given <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/>'s <see cref="T:NZXTSharp.HuePlus.HuePlusChannelInfo"/>.
            </summary>
            <param name="Channel"></param>
        </member>
        <member name="T:NZXTSharp.HuePlus.HuePlusChannel">
            <summary>
            Represents a channel on an NZXT device.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlusChannel.ChannelByte">
            <summary>
            The channelbyte of the <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlusChannel.Effect">
            <summary>
            The <see cref="T:NZXTSharp.IEffect"/> currently applied to the <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlusChannel.State">
            <summary>
            Whether or not the current <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/> is active (on).
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlusChannel.ChannelInfo">
            <summary>
            The <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/>'s <see cref="P:NZXTSharp.HuePlus.HuePlusChannel.ChannelInfo"/> object.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlusChannel.Parent">
            <summary>
            The device that owns the <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlusChannel.SubDevices">
            <summary>
            A list of <see cref="T:NZXTSharp.ISubDevice"/>s owned by the <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/>.
            </summary>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlusChannel.#ctor(System.Int32)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/> object with a given <paramref name="ChannelByte"/>.
            </summary>
            <param name="ChannelByte">The ChannelByte to construct the channel from.</param>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlusChannel.#ctor(System.Int32,NZXTSharp.HuePlus.HuePlus)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/> object with a given <paramref name="ChannelByte"/>,
            owned by a given <paramref name="Parent"/> <see cref="T:NZXTSharp.HuePlus.HuePlus"/>.
            </summary>
            <param name="ChannelByte">The ChannelByte to construct the channel from.</param>
            <param name="Parent">The <see cref="T:NZXTSharp.HuePlus.HuePlus"/> that will own the <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/></param>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlusChannel.#ctor(System.Int32,NZXTSharp.HuePlus.HuePlus,NZXTSharp.HuePlus.HuePlusChannelInfo)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/> object with a given <paramref name="ChannelByte"/>,
            owned by a given <paramref name="Parent"/> <see cref="T:NZXTSharp.HuePlus.HuePlus"/>,
            with a given <see cref="P:NZXTSharp.HuePlus.HuePlusChannel.ChannelInfo"/>.
            </summary>
            <param name="ChannelByte">The ChannelByte to construct the channel from.</param>
            <param name="Parent">The <see cref="T:NZXTSharp.HuePlus.HuePlus"/> that owns the <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/></param>
            <param name="Info">The <see cref="P:NZXTSharp.HuePlus.HuePlusChannel.ChannelInfo"/> owned by the <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/>.</param>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlusChannel.RefreshSubDevices">
            <summary>
            Refreshes all <see cref="T:NZXTSharp.ISubDevice"/>s in the <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/>'s <see cref="P:NZXTSharp.HuePlus.HuePlusChannel.SubDevices"/> list.
            </summary>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlusChannel.On">
            <summary>
            Turns the <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/> on.
            </summary>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlusChannel.Off">
            <summary>
            Turns the <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/> off.
            </summary>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlusChannel.BuildColorBytes(NZXTSharp.Color)">
            <summary>
            Build color bytes for an effect based on the given <see cref="T:NZXTSharp.Color"/>.
            </summary>
            <param name="color"></param>
            <returns>A byte array with 140 elements; G, R, B color codes.</returns>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlusChannel.BuildColorBytes(System.Byte[])">
            <summary>
            Builds the color bytes for an effect.
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlusChannel.UpdateChannelInfo">
            <summary>
            Updates the <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/>'s <see cref="P:NZXTSharp.HuePlus.HuePlusChannel.ChannelInfo"/>.
            </summary>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlusChannel.SetChannelInfo(NZXTSharp.HuePlus.HuePlusChannelInfo)">
            <summary>
            Sets the <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/>'s <see cref="P:NZXTSharp.HuePlus.HuePlusChannel.ChannelInfo"/> to the given <paramref name="info"/>.
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlusChannel.op_Explicit(NZXTSharp.HuePlus.HuePlusChannel)~System.Byte">
            <summary>
            Returns the <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/>'s ChannelByte.
            </summary>
            <param name="channel"></param>
        </member>
        <member name="T:NZXTSharp.HuePlus.HuePlusChannelInfo">
            <summary>
            Represents information about a <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlusChannelInfo.NumLeds">
            <summary>
            Represents the total number of LEDs available on a <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlusChannelInfo.NumSubDevices">
            <summary>
            The number of SubDevices available on a <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlusChannelInfo.Type">
            <summary>
            Type of <see cref="T:NZXTSharp.ISubDevice"/>s available on a <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.HuePlusChannelInfo.IsActive">
             <summary>
            
             </summary>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlusChannelInfo.#ctor(NZXTSharp.HuePlus.HuePlusChannel,System.Byte[])">
            <summary>
            Constructs a <see cref="T:NZXTSharp.HuePlus.HuePlusChannelInfo"/> with a given <paramref name="Parent"/> as its parent, from some given channel handshake <paramref name="data"/>.
            </summary>
            <param name="Parent"></param>
            <param name="data"></param>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlusChannelInfo.#ctor(System.Byte[])">
            <summary>
            Constructs a <see cref="T:NZXTSharp.HuePlus.HuePlusChannelInfo"/> object from some given channel handshake <paramref name="data"/>.
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlusChannelInfo.Update">
            <summary>
            Updates the parent <see cref="T:NZXTSharp.HuePlus.HuePlusChannel"/>'s <see cref="T:NZXTSharp.HuePlus.HuePlusChannelInfo"/>.
            </summary>
        </member>
        <member name="M:NZXTSharp.HuePlus.HuePlusChannelInfo.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:NZXTSharp.HuePlus._02Param">
            <summary>
            Represents an 02 effect Param
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus._02Param.Value">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.HuePlus._02Param.GetValue">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.HuePlus._02Param.op_Implicit(NZXTSharp.HuePlus._02Param)~System.Byte">
            <summary>
            
            </summary>
            <param name="param"></param>
        </member>
        <member name="T:NZXTSharp.HuePlus._03Param">
            <summary>
            Represents an 03 effect param.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus._03Param.Value">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.HuePlus._03Param.GetValue">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.HuePlus._03Param.op_Implicit(NZXTSharp.HuePlus._03Param)~System.Byte">
            <summary>
            
            </summary>
            <param name="param"></param>
        </member>
        <member name="T:NZXTSharp.HuePlus.Direction">
            <summary>
            Represents a <see cref="T:NZXTSharp.HuePlus.Direction"/> effect param.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.Direction.WithMovement">
            <summary>
            Whether or not the effect will move.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.Direction.IsForward">
            <summary>
            Whether or not the effect will move forward or backward.
            </summary>
        </member>
        <member name="P:NZXTSharp.HuePlus.Direction.Value">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.HuePlus.Direction.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.HuePlus.Direction"/> param.
            </summary>
            <param name="isForward">Whether or not the param moves forward or backward.</param>
            <param name="withMovement">Whether or not the effect will move smoothly.</param>
        </member>
        <member name="M:NZXTSharp.HuePlus.Direction.GetValue">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.HuePlus.Direction.op_Implicit(NZXTSharp.HuePlus.Direction)~System.Byte">
            <summary>
            
            </summary>
            <param name="param"></param>
        </member>
        <member name="T:NZXTSharp.KrakenX.Loading">
            <summary>
            Represents a loading RGB effect.
            </summary>
        </member>
        <member name="P:NZXTSharp.KrakenX.Loading.EffectByte">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.KrakenX.Loading.EffectName">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.KrakenX.Loading.Channel">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.KrakenX.Loading.#ctor(NZXTSharp.Color,System.Int32)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.KrakenX.Loading"/> effect.
            </summary>
            <param name="Color">The <see cref="T:NZXTSharp.Color"/> of the effect to display.</param>
            <param name="Speed">The speed the effect will move at.</param>
        </member>
        <member name="M:NZXTSharp.KrakenX.Loading.IsCompatibleWith(NZXTSharp.NZXTDeviceType)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.KrakenX.Loading.BuildBytes(NZXTSharp.NZXTDeviceType,NZXTSharp.IChannel)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.KrakenX.TaiChi">
            <summary>
            Represents a TaiChi RGB effect.
            </summary>
        </member>
        <member name="P:NZXTSharp.KrakenX.TaiChi.EffectByte">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.KrakenX.TaiChi.EffectName">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.KrakenX.TaiChi.Channel">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.KrakenX.TaiChi.#ctor(NZXTSharp.Color[],System.Int32)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.KrakenX.TaiChi"/> effect.
            </summary>
            <param name="Colors">The <see cref="T:NZXTSharp.Color"/>s to display.</param>
            <param name="Speed">The speed for the effect to move at.</param>
        </member>
        <member name="M:NZXTSharp.KrakenX.TaiChi.IsCompatibleWith(NZXTSharp.NZXTDeviceType)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.KrakenX.TaiChi.BuildBytes(NZXTSharp.NZXTDeviceType,NZXTSharp.IChannel)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.KrakenX.WaterCooler">
            <summary>
            Represents a Water Cooler RGB effect.
            </summary>
        </member>
        <member name="P:NZXTSharp.KrakenX.WaterCooler.EffectByte">
            <summary>
            The <see cref="T:NZXTSharp.KrakenX.WaterCooler"/> effect's ChannelByte.
            </summary>
        </member>
        <member name="P:NZXTSharp.KrakenX.WaterCooler.EffectName">
            <summary>
            The <see cref="T:NZXTSharp.KrakenX.WaterCooler"/> effect's name.
            </summary>
        </member>
        <member name="P:NZXTSharp.KrakenX.WaterCooler.Channel">
            <summary>
            The <see cref="T:NZXTSharp.IChannel"/> that the <see cref="T:NZXTSharp.KrakenX.WaterCooler"/> effect is applied to.
            </summary>
        </member>
        <member name="M:NZXTSharp.KrakenX.WaterCooler.#ctor(System.Int32)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.KrakenX.WaterCooler"/> instance.
            </summary>
            <param name="Speed">The speed for the effect to move at.</param>
        </member>
        <member name="M:NZXTSharp.KrakenX.WaterCooler.IsCompatibleWith(NZXTSharp.NZXTDeviceType)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.KrakenX.WaterCooler.BuildBytes(NZXTSharp.NZXTDeviceType,NZXTSharp.IChannel)">
            <inheritdoc/>
        </member>
        <member name="T:NZXTSharp.KrakenX.OverrideThread">
            <summary>
            Which thread to stop.
            </summary>
        </member>
        <member name="F:NZXTSharp.KrakenX.OverrideThread.Fan">
            <summary>
            Stop the fan override thread.
            </summary>
        </member>
        <member name="F:NZXTSharp.KrakenX.OverrideThread.Pump">
            <summary>
            Stop the pump override thread.
            </summary>
        </member>
        <member name="T:NZXTSharp.KrakenX.ThreadStopType">
            <summary>
            Thread stop types.
            </summary>
        </member>
        <member name="F:NZXTSharp.KrakenX.ThreadStopType.Abort">
            <summary>
            If you need the override thread to stop immediately.
            Best/ safest method is to use <see cref="F:NZXTSharp.KrakenX.ThreadStopType.Flag"/>.
            </summary>
        </member>
        <member name="F:NZXTSharp.KrakenX.ThreadStopType.Flag">
            <summary>
            Stops the override thread with a flag. This is the best/ safest method, 
            but may take up to 20 seconds to take effect.
            </summary>
        </member>
        <member name="T:NZXTSharp.KrakenX.KrakenX">
            <summary>
            Represents an NZXT KrakenX device.
            </summary>
        </member>
        <member name="P:NZXTSharp.KrakenX.KrakenX.DeviceID">
            <summary>
            The <see cref="T:NZXTSharp.HIDDeviceID"/> of the <see cref="T:NZXTSharp.KrakenX.KrakenX"/> device. Will always be <see cref="F:NZXTSharp.HIDDeviceID.KrakenX"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.KrakenX.KrakenX.Type">
            <summary>
            The <see cref="T:NZXTSharp.NZXTDeviceType"/> of the <see cref="T:NZXTSharp.KrakenX.KrakenX"/> device. Will always be <see cref="F:NZXTSharp.NZXTDeviceType.KrakenX"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.KrakenX.KrakenX.ID">
            <inheritdoc/>
        </member>
        <member name="P:NZXTSharp.KrakenX.KrakenX.Both">
            <summary>
            Represents both the <see cref="P:NZXTSharp.KrakenX.KrakenX.Logo"/>, and <see cref="P:NZXTSharp.KrakenX.KrakenX.Ring"/> channels.
            </summary>
        </member>
        <member name="P:NZXTSharp.KrakenX.KrakenX.Logo">
            <summary>
            Represents the <see cref="T:NZXTSharp.KrakenX.KrakenX"/>'s logo RGB channel.
            </summary>
        </member>
        <member name="P:NZXTSharp.KrakenX.KrakenX.Ring">
            <summary>
            Represents the <see cref="T:NZXTSharp.KrakenX.KrakenX"/>'s ring RGB channel.
            </summary>
        </member>
        <member name="P:NZXTSharp.KrakenX.KrakenX.FirmwareVersion">
            <summary>
            The <see cref="T:NZXTSharp.KrakenX.KrakenX"/> device's firmware version.
            </summary>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenX.#ctor">
            <summary>
            Constructs an instance of a <see cref="T:NZXTSharp.KrakenX.KrakenX"/> device.
            </summary>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenX.WriteCustom(System.Byte[])">
            <summary>
            Writes a custom <paramref name="Buffer"/> to the <see cref="T:NZXTSharp.KrakenX.KrakenX"/> device.
            </summary>
            <param name="Buffer"></param>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenX.StopOverrideThread(NZXTSharp.KrakenX.OverrideThread,NZXTSharp.KrakenX.ThreadStopType)">
            <summary>
            Stops the thread overriding a given <paramref name="Thread"/>, using a given <paramref name="StopType"/>.
            </summary>
            <param name="Thread">Which <see cref="T:NZXTSharp.KrakenX.OverrideThread"/> to stop.</param>
            <param name="StopType">How to stop the given <paramref name="Thread"/>.</param>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenX.ApplyEffect(NZXTSharp.IEffect)">
            <summary>
            Applies an <paramref name="Effect"/> to both channels.
            </summary>
            <param name="Effect">An <see cref="T:NZXTSharp.IEffect"/>.</param>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenX.ApplyEffect(NZXTSharp.KrakenX.KrakenXChannel,NZXTSharp.IEffect,System.Boolean)">
            <summary>
            Applies a given <see cref="T:NZXTSharp.IEffect"/> <paramref name="Effect"/> to a given 
            <see cref="T:NZXTSharp.KrakenX.KrakenXChannel"/> <paramref name="Channel"/>.
            </summary>
            <param name="Channel"></param>
            <param name="Effect"></param>
            <param name="ApplyToChannel">Whether or not to apply <paramref name="Effect"/>
            to the <paramref name="Channel"/> as its last applied effect.</param>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenX.GetPumpSpeed">
            <summary>
            Gets the pump speed last reported by the <see cref="T:NZXTSharp.KrakenX.KrakenX"/> device.
            </summary>
            <returns>The last reported pump speed in RPM.</returns>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenX.SetPumpSpeed(System.Int32)">
            <summary>
            Sets the <see cref="T:NZXTSharp.KrakenX.KrakenX"/>'s pump speed to a given percent or RPM.
            </summary>
            <param name="Speed">
            The speed value to set. Must be 50-100 (inclusive).
            </param>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenX.GetFanSpeed">
            <summary>
            Gets the last fan speed reported by the <see cref="T:NZXTSharp.KrakenX.KrakenX"/> device.
            </summary>
            <returns>The last reported fan speed in RPM.</returns>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenX.SetFanSpeed(System.Int32)">
            <summary>
            Sets all fans connected to the <see cref="T:NZXTSharp.KrakenX.KrakenX"/> device to a given <paramref name="Percent"/>.
            </summary>
            <param name="Percent">The percentage to set the fans to. Must be 25-100 (inclusive).</param>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenX.GetLiquidTemp(System.Boolean)">
            <summary>
            Gets the last reported liquid temp.
            </summary>
            <param name="AsFarenheit">Whether or not to return the temp value in degrees F.</param>
            <returns>The last reported liquid temp as a rounded integer, in degrees C.</returns>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenX.GetLastReport">
            <summary>
            Gets the last HID report received from the KrakenX device.
            </summary>
            <returns>An <see cref="T:HidLibrary.HidReport"/>.</returns>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenX.GetFirmwareVersion">
            <summary>
            Gets the <see cref="T:NZXTSharp.KrakenX.KrakenX"/>'s firmware version.
            </summary>
            <returns>A <see cref="T:System.Version"/> object.</returns>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenX.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenX.Reconnect">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenX.PumpSpeedOverrideLoop(System.Object)">
            <summary>
            Starts a thread that sends pump speed override packets.
            </summary>
            <param name="Buffer"></param>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenX.FanSpeedOverrideLoop(System.Object)">
            <summary>
            Starts a thread that starts fan speed override packets.
            </summary>
            <param name="Buffer"></param>
        </member>
        <member name="T:NZXTSharp.KrakenX.KrakenXChannel">
            <summary>
            Represents an RGB channel on a <see cref="T:NZXTSharp.KrakenX.KrakenX"/> device.
            </summary>
        </member>
        <member name="P:NZXTSharp.KrakenX.KrakenXChannel.ChannelByte">
            <summary>
            The ChannelByte of the <see cref="T:NZXTSharp.KrakenX.KrakenXChannel"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.KrakenX.KrakenXChannel.State">
            <summary>
            Whether or not the channel is on.
            </summary>
        </member>
        <member name="P:NZXTSharp.KrakenX.KrakenXChannel.Leds">
            <summary>
            All LEDs owned by the <see cref="T:NZXTSharp.KrakenX.KrakenXChannel"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.KrakenX.KrakenXChannel.NumLeds">
            <summary>
            The number of LEDs owned by the <see cref="T:NZXTSharp.KrakenX.KrakenXChannel"/>.
            </summary>
        </member>
        <member name="P:NZXTSharp.KrakenX.KrakenXChannel.Effect">
            <summary>
            The effect last applied to the <see cref="T:NZXTSharp.KrakenX.KrakenXChannel"/>.
            </summary>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenXChannel.#ctor(System.Int32,NZXTSharp.KrakenX.KrakenX)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.KrakenX.KrakenXChannel"/> instance.
            </summary>
            <param name="ChannelByte">The channel's ChannelByte.</param>
            <param name="Parent">The <see cref="T:NZXTSharp.KrakenX.KrakenX"/> device that owns the channel.</param>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenXChannel.BuildLEDs">
            <summary>
            Builds the LEDs owned by the <see cref="T:NZXTSharp.KrakenX.KrakenXChannel"/>.
            </summary>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenXChannel.On">
            <summary>
            Turns the <see cref="T:NZXTSharp.KrakenX.KrakenXChannel"/> on and re-applies 
            the last applied <see cref="P:NZXTSharp.KrakenX.KrakenXChannel.Effect"/>
            </summary>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenXChannel.Off">
            <summary>
            Turns the <see cref="T:NZXTSharp.KrakenX.KrakenXChannel"/> off.
            </summary>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenXChannel.BuildColorBytes(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenXChannel.BuildColorBytes(NZXTSharp.Color)">
            <inheritdoc/>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenXChannel.ToggleLed(System.Int32)">
            <summary>
            Toggles an LED's state.
            </summary>
            <param name="Index">The index of the LED to toggle.</param>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenXChannel.SetLed(System.Boolean,System.Int32)">
            <summary>
            Sets the state of an LED.
            </summary>
            <param name="State">The state to set.</param>
            <param name="Index">The index of the LED to set.</param>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenXChannel.ToggleLedRange(System.Int32,System.Int32)">
            <summary>
            Toggles all LEDs in an index range.
            </summary>
            <param name="Start">The start index.</param>
            <param name="End">The end index.</param>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenXChannel.SetLedRange(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets all LEDs in an index range to a given state.
            </summary>
            <param name="Start">The start index.</param>
            <param name="End">The end index.</param>
            <param name="State">The state to set.</param>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenXChannel.ToggleState">
            <summary>
            Toggles the state of the <see cref="T:NZXTSharp.KrakenX.KrakenXChannel"/>.
            </summary>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenXChannel.SetState(System.Boolean)">
            <summary>
            Sets the state of the <see cref="T:NZXTSharp.KrakenX.KrakenXChannel"/>.
            </summary>
            <param name="State">The state to set.</param>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenXChannel.AllLedOn">
            <summary>
            Turns all LEDs on.
            </summary>
        </member>
        <member name="M:NZXTSharp.KrakenX.KrakenXChannel.AllLedOff">
            <summary>
            Turns all LEDs off.
            </summary>
        </member>
        <member name="T:NZXTSharp.KrakenX.DCB">
            <summary>
            Represents a DCB param.
            </summary>
        </member>
        <member name="P:NZXTSharp.KrakenX.DCB.Value">
            <summary>
            The <see cref="T:NZXTSharp.KrakenX.DCB"/> param's value.
            </summary>
        </member>
        <member name="M:NZXTSharp.KrakenX.DCB.#ctor(System.Int32,System.Boolean)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.KrakenX.DCB"/> instance.
            </summary>
            <param name="ChannelByte">The ChannelByte to construct with.</param>
            <param name="IsForward">Whether or not the effect is moving forward.</param>
        </member>
        <member name="M:NZXTSharp.KrakenX.DCB.#ctor(System.String,System.Boolean)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.KrakenX.DCB"/> instance.
            </summary>
            <param name="Channel">A string representation of the ChannelByte to construct with.</param>
            <param name="IsForward">Whether or not the effect os moving forward.</param>
        </member>
        <member name="M:NZXTSharp.KrakenX.DCB.#ctor(NZXTSharp.KrakenX.KrakenXChannel,System.Boolean)">
            <summary>
            Constructs a <see cref="T:NZXTSharp.KrakenX.DCB"/> instance.
            </summary>
            <param name="Channel">The <see cref="T:NZXTSharp.KrakenX.KrakenXChannel"/> to construct the param for.</param>
            <param name="IsForward">Whether or not the effect is moving forward.</param>
        </member>
        <member name="M:NZXTSharp.KrakenX.DCB.GetValue">
            <summary>
            Gets the <see cref="T:NZXTSharp.KrakenX.DCB"/> param's value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NZXTSharp.KrakenX.DCB.op_Implicit(NZXTSharp.KrakenX.DCB)~System.Byte">
            <summary>
            
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:NZXTSharp.KrakenX.DCBWM.op_Implicit(NZXTSharp.KrakenX.DCBWM)~System.Byte">
            <summary>
            
            </summary>
            <param name="param"></param>
        </member>
    </members>
</doc>
